# ServiceNow LED Dashboard Configuration
# Copy this file to config.yaml and customize for your environment

# ServiceNow Connection Settings
servicenow:
  # Your ServiceNow instance URL (without trailing slash)
  instance_url: "https://yourinstance.service-now.com"

  # ServiceNow credentials - create a dedicated integration user
  # Required roles: itil, rest_service
  username: "dashboard_user"
  password: "your_password_here"

  # Connection settings
  verify_ssl: true    # Set to false only for dev/test instances
  timeout: 30         # Request timeout in seconds

  # Data refresh intervals (in seconds)
  # Different data types can refresh at different rates
  refresh_intervals:
    incidents: 60          # Critical data - refresh every minute
    service_requests: 120  # Less critical - refresh every 2 minutes
    system_health: 300     # Stable data - refresh every 5 minutes

  # ServiceNow table names (customize if you use custom tables)
  tables:
    incidents: "incident"
    service_requests: "sc_request"
    changes: "change_request"
    # health_checks: "u_system_health"  # Replace with your health monitoring table

# Display Settings
display:
  # How long to show each screen before rotating (seconds)
  screen_rotation_time: 10

  # Which screens to display and in what order
  # Available screens: incident_summary, priority_breakdown, assignment_groups,
  #                   service_requests, system_health, custom_metrics
  screens:
    - "incident_summary"
    - "priority_breakdown"
    - "assignment_groups"
    - "service_requests"
    - "system_health"

  # Color schemes (RGB values 0-255)
  colors:
    # Priority colors for incidents
    priority_1: [255, 0, 0]     # Critical - Bright Red
    priority_2: [255, 165, 0]   # High - Orange
    priority_3: [255, 255, 0]   # Medium - Yellow
    priority_4: [0, 255, 0]     # Low - Green
    priority_5: [128, 128, 128] # Planning - Gray

    # Status colors
    healthy: [0, 255, 0]        # Green - Systems up, good metrics
    warning: [255, 255, 0]      # Yellow - Warning thresholds
    critical: [255, 0, 0]       # Red - Critical issues
    unknown: [128, 128, 128]    # Gray - Unknown status
    info: [0, 100, 255]         # Blue - Informational

    # Text colors
    text_primary: [255, 255, 255]   # White - Main text
    text_secondary: [192, 192, 192] # Light gray - Secondary text
    text_dim: [128, 128, 128]       # Dark gray - Timestamps, etc.

  # Font settings (BDF fonts for LED matrices)
  fonts:
    small: "4x6.bdf"    # Small text, timestamps
    medium: "5x8.bdf"   # Default text
    large: "6x10.bdf"   # Large numbers, emphasis

# LED Matrix Hardware Settings
matrix:
  # Matrix dimensions
  led_rows: 32        # Matrix height (32 or 64 typical)
  led_cols: 64        # Matrix width (64, 128, etc.)
  led_chain: 1        # Number of panels chained together
  led_parallel: 1     # Number of parallel chains

  # Brightness and refresh
  led_brightness: 60           # 0-100, adjust for environment
  led_limit_refresh: 120       # Hz, lower for older Pi models

  # Hardware specific settings
  hardware_mapping: 'adafruit-hat-pwm'  # Options:
  # - 'adafruit-hat-pwm'  (if you soldered GPIO4-GPIO18 jumper)
  # - 'adafruit-hat'      (no jumper wire)
  # - 'regular'           (for other hardware)

  # GPIO settings - adjust based on your Raspberry Pi model
  gpio_slowdown: 1    # 0-4, increase if you see flickering
  # Pi 4/5: usually 1
  # Pi 3: try 1-2
  # Pi Zero 2W: try 2-3

  # Advanced PWM settings (if using PWM-capable hardware)
  led_pwm_bits: 11                    # PWM bits
  led_pwm_lsb_nanoseconds: 130       # PWM LSB nanoseconds
  led_pwm_dither_bits: 0             # PWM dither bits

# Dashboard Behavior Settings
behavior:
  # Scrolling and animation
  scroll_speed: 1         # Pixels per scroll step
  scroll_delay: 0.03      # Delay between scroll steps (seconds)
  transition_time: 1.0    # Screen transition time
  fade_effect: true       # Enable fade transitions

  # Alert thresholds - when to trigger visual alerts
  thresholds:
    critical_incidents: 5       # Flash display if >= this many P1/P2 incidents
    system_health_warning: 90   # Warn if system health drops below this %
    queue_depth_warning: 20     # Warn if any assignment group has > this many incidents
    resolution_rate_warning: 50 # Warn if resolution rate drops below this %

  # Alert behavior
  alerts:
    flash_on_critical: true     # Flash red background for critical alerts
    flash_interval: 0.5         # Seconds between flashes
    brightness_boost: true      # Increase brightness during alerts
    alert_duration: 30          # How long to show alerts (seconds)

# Logging Configuration
logging:
  level: "INFO"           # DEBUG, INFO, WARNING, ERROR
  file: "servicenow_dashboard.log"
  max_size_mb: 10         # Log file size before rotation
  backup_count: 3         # Number of old log files to keep

  # Log format
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"

# Development and Testing Settings
development:
  test_mode: false         # Use fake data instead of real API calls
  debug_display: false     # Show debug info on display
  simulation_mode: false   # Run without LED matrix hardware
  mock_data_file: "test_data.json"  # File for mock data

# Custom Metrics (Advanced)
# Define additional ServiceNow queries for specific business needs
custom_metrics:
  # Example: Track major incidents separately
  major_incidents:
    table: "incident"
    query: "priority=1^ORpriority=2^state!=6^state!=7"  # P1/P2, not resolved/closed
    display_name: "Major Incidents"
    color: "critical"

  # Example: Track pending changes
  pending_changes:
    table: "change_request"
    query: "state=1^ORstate=2"  # New or Assess states
    display_name: "Pending Changes"
    color: "warning"

  # Example: Security incidents
  security_incidents:
    table: "incident"
    query: "category=Security^state!=6^state!=7"
    display_name: "Security Issues"
    color: "critical"

  # Example: Failed deployments (customize table name)
  # failed_deployments:
  #   table: "u_deployment"
  #   query: "status=failed^sys_created_on>=javascript:gs.daysAgoStart(1)"
  #   display_name: "Failed Deploys"
  #   color: "critical"

# Assignment Group Display Mappings
# Map technical ServiceNow group names to friendly display names
group_mappings:
  "IT Service Desk - Level 1": "L1 Support"
  "IT Service Desk - Level 2": "L2 Support"
  "Database Administration": "DBA Team"
  "Network Operations": "NetOps"
  "Security Operations Center": "SecOps"
  "Application Support - Production": "App Support"
  "Infrastructure - Unix": "Unix Team"
  "Infrastructure - Windows": "Windows Team"
  "Service Desk - VIP": "VIP Support"

# Screen-specific settings
screens:
  incident_summary:
    show_timestamp: true
    show_resolution_rate: true
    highlight_critical: true

  priority_breakdown:
    show_bars: true          # Show priority as colored bars
    show_percentages: false  # Show percentages instead of counts

  assignment_groups:
    max_groups_shown: 4      # How many groups to display
    sort_by: "count"         # "count" or "alphabetical"
    show_unassigned: true    # Show unassigned incidents

  service_requests:
    show_approval_status: true
    show_sla_status: false   # If you track SLA on requests

  system_health:
    show_response_times: true
    show_individual_systems: false  # Show specific system status

# Network and Performance Settings
network:
  # Retry settings for API calls
  max_retries: 3
  retry_delay: 5        # Seconds between retries
  connection_timeout: 30

  # Rate limiting (be nice to your ServiceNow instance)
  api_rate_limit: 60    # Max API calls per minute

# Auto-update settings (optional)
auto_update:
  enabled: false        # Auto-update code from git on restart
  branch: "main"        # Which git branch to pull from
  backup_config: true   # Backup config before updating

# Maintenance settings
maintenance:
  # Restart dashboard daily to refresh connections
  daily_restart: false
  restart_time: "03:00"  # Time to restart (24-hour format)

  # Clean up old logs
  log_cleanup: true
  log_retention_days: 30